#include <reg52.h>
#include <intrins.h>
typedef unsigned char UB8;

#define unint unsgined int
#define  LCM_PORT P1
sbit LCM_RS = P3^0;
sbit LCM_RW = P3^7;
sbit LCM_ENABLE = P3^4;
sbit LCM_CS1 = P3^1;
sbit LCM_RESET = P3^6;

sbit STP = P2^0;
sbit S_S = P2^1;

void Inital_SSD1306BZ (void);
void Write_Command (UB8);
vvoid Write_Data (UB8);
void Show (void);
void Show1 (void);
void Show2 (void);
void Show3 (void);
void Show4 (void);
void Show5 (void);
void Show6 (void);
void Show7 (void);
void Show8 (void);
void Show9 (void);
void Show10 (void);
void Show11 (void);
void Delay (unsigned char);
void Stp_Sc (void);

unsigned char code picture[8][128];
unsigned char code picture1[8][128];
unsigned char code picture2[8][128];
unsigned char code picture3[8][128];
unsigned char code picture4[8][128];
unsigned char code picture5[8][128];
unsigned char code picture6[8][128];

void main ()
{
   P2 = 0X00;
   LCM_PORT = 0XFF;
   Inital_SSD1306BZ ();
   
   while (1)
   {
      Show1();
      Delay (15);
      Stp_Sc ();
      
      Show2();    
      Delay (15);
      Stp_Sc ();
      
      Show3 ();
      Delay (15);
      Stp_Sc ();
      
      Show4 ();
      Delay (15);
      Stp_Sc ();
      
      Show5 ();
      Delay ();
      Stp_Sc ();
      
      Show6 ();
      Delay ();
      Stp_Sc ();
      
      Show7 ();
      Delay ();
      Stp_Sc ();
      
      Show8 ();
      Delay (15);
      Stp_Sc ();
   }
}


void Initial_SSD1306BZ ()
{
      LCM_RW = 0;
      LCM_RS = 0;
      LCM_CS1 = 0;
      
   
      Write_Command (0xAE);
      Write_Command (0x80);
      Write_Command (0x3F);
      Write_Command (0x00);
      Write_Command (0x40);
      Write_Command (0x8D);
      Write_Command (0x10);
      //Write_Command (0x14);
      Write_Command (0xA1);
      Write_Command (0XC8);
      Write_Command (0xDA);
      Write_Command (0x12);
      Write_Command (0x81);
      Write_Command (0XFF);
      Write_Command (0xD9);
      Write_Command (0x22);
      Write_Command (0xDB);
      Write_Command (0x40);
      Write_Command (0xA4);
      Write_Command (0xA6);
      Write_Command (0xAF);
}
void Write_Data (UN8 datap)
{
   //LCM_CS1 = 0;
   //LCM_RS = 1;
   //LCM_RW = 0;
   LCM_CS1 = 1;
   LCM_RS = 1;
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   LCM_PORT = datap;
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   LCM_ENABLE = 1;
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   LCM_ENABLE = 0;
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   _nop_ ();
   // LCM_ENABLE = 0;
   // LCM_RW = 1;
   // LCM_RS = 0;
   // LCM_CS1 = 1;
    LCM_RW = 1;
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    LCM_CS1 = 0;
    LCM_RS = 1;
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
}

void Write_Command (UB8 command)
{
    LCM_CS1 = 0;
    LCM_RS = 0;
    LCM_RW = 0;
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    LCM_PORT =commmand ;
    LCM_ENABLE = 1;
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    LCM_ENABLE = 0;
    //LCM_RW = 1;
    //LCM_RS = 1;
    //LCM_CS1 = 1;
    LCM_RW = 1;
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
    LCM_RS = 0;
    LCM_CS1 = 0;
    _nop_ ();
    _nop_ ();
    _nop_ ();
    _nop_ ();
}

void Show1 ()
{
   UB8 x,y,Z = 0XB0;
   for (x=0;x<8;x++)
   {
     Write_Command (Z);
     Z++;
     Write_Command (0x10);
     Write_Command (0x00);
     for (y=0;y<128;y++)
     {
        Write_Data (picture6[x][y]);
     }
   }
}

void Show1 ()
{
   UB8 x,y,Z =0xb0;
   for (x=0;x<8;x++)
    {
      Write_Command (Z);
      Z++;
      Write_Command (0x11);
      Write_Command (0x02);
      for (y=0;y<128;y++)
       {
         Write_Data (0xff);
         _nop_ ();
         _nop_ ();
         _nop_ ();
         _nop_ ();
       }
    }
}

void Show2 (void)
{
  UB8 x,y,Z =0xB0;
   for (X=0;X<8;X++)
     {
         Write_Command (Z);
         Z++;
         Write_Command (0x10);
         Write_Command (0x00);
         for (y=0;y<128;y++)
         {
           Write_Data (picture1[x][y]);
         }
     }
}
void Delay (unsigned char coun )
{
   unsigned char i,j,k;
   
   for (k = 0;k< coun;k++)
   {
      for (j= 0;j<150;j++)
      {
         for (i=0;i<200;i++)
            ;
      }
   }
}

void Stp_Sc ()
{
     wiile (S_S == 1)
     {
        if (S_S==0)
        {
          break;
        }
        if (STP == 1)
        {
          break;
        }
     }
}
